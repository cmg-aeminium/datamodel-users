<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>pt.cmg.aeminium</groupId>
    <artifactId>datamodel-users</artifactId>
    <version>1.0.1</version>
    
    <packaging>ejb</packaging>

    <name>datamodel-users</name>

    <developers>
        <developer>
            <id>001</id>
            <name>Carlos Gon√ßalves</name>
            <email>carlosmoliveiragoncalves@gmail.com</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>payara-nexus-artifacts</id>
            <name>Payara Nexus Artifacts</name>
            <url>https://nexus.payara.fish/repository/payara-artifacts</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>

        <!-- General properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JAVA version -->
        <java-version>21</java-version>

        <!-- Maven plugin versions -->
        <maven-required-version>3.9.7</maven-required-version>

        <clean-plugin-version>3.4.0</clean-plugin-version>
        <compiler-plugin-version>3.13.0</compiler-plugin-version>
        <ejb-plugin-version>3.2.1</ejb-plugin-version>
        <enforcer-plugin-version>3.5.0</enforcer-plugin-version>
        <failsafe-plugin-version>3.3.0</failsafe-plugin-version>
        <install-plugin-version>3.1.3</install-plugin-version>
        <jar-plugin-version>3.4.2</jar-plugin-version>
        <resources-plugin-version>3.3.1</resources-plugin-version>
        <rewrite-plugin-version>5.34.1</rewrite-plugin-version>
        <rewrite-java-version>2.18.1</rewrite-java-version>
        <source-plugin-version>3.3.1</source-plugin-version>
        <surefire-plugin-version>3.3.0</surefire-plugin-version>
        <surefire-reporting-plugin-version>3.0.0-M4</surefire-reporting-plugin-version>
        <versions-plugin-version>2.16.2</versions-plugin-version>

        <!-- Test -->
        <junit-version>5.11.4</junit-version>
        <mockito-version>5.14.2</mockito-version>
        <hamcrest-version>3.0</hamcrest-version>
        <rest-assured-version>5.5.0</rest-assured-version>
        <rest-assured-json-schema-version>5.5.0</rest-assured-json-schema-version>


        <!-- Platform dependencies -->
        <jakarta.jakartaee-api-version>10.0.0</jakarta.jakartaee-api-version>
        <eclipselink-version>4.0.1.payara-p2</eclipselink-version>
        <weld-version>5.0.1.Final</weld-version>

        <!-- 3rd party dependencies -->
        <commons-lang3-version>3.17.0</commons-lang3-version>
        
         <!-- First party dependencies -->
        <aem-jakarta-utils-version>3.0.1</aem-jakarta-utils-version>
        <aem-datamodel-common-version>1.0.1</aem-datamodel-common-version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.jakartaee-api-version}</version>
            <scope>provided</scope>
        </dependency>
        
       <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.core</artifactId>
            <version>${eclipselink-version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-osgi-bundle</artifactId>
            <version>${weld-version}</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>pt.cmg</groupId>
            <artifactId>jakartautils</artifactId>
            <version>${aem-jakarta-utils-version}</version>
        </dependency>
        <dependency>
            <groupId>pt.cmg.aeminium</groupId>
            <artifactId>datamodel-common</artifactId>
            <version>${aem-datamodel-common-version}</version>
        </dependency>


        <!-- 3rd party dependencies-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3-version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured-version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>${rest-assured-json-schema-version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mailapi</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven Clean Plugin , used to clean up after build -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean-plugin-version}</version>
                </plugin>

                <!-- Maven Compiler Plugin , for JARs -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin-version}</version>
                    <configuration>
                        <release>${java-version}</release>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <!-- Maven Source Plugin , to automatically generate sources jar -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source-plugin-version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                
                <!-- Maven EJB Plugin, for EJBs -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${ejb-plugin-version}</version>
                    <configuration>
                        <ejbVersion>4.0</ejbVersion>
                    </configuration>
                </plugin>
                
                <!-- This creates the actual JAR artifact -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar-plugin-version}</version>
                </plugin>

                <!-- Useful for the Versions plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${enforcer-plugin-version}</version>
                </plugin>

                <!-- Maven Install plugin, install the build artifacts into the
                LOCAL repository -->
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${install-plugin-version}</version>
                </plugin>

                <!-- Maven Resources plugin, copies the resources to output
                directory to include in final JAR -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${resources-plugin-version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Useful for the Versions plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven-required-version}</version>
                                    <message>Minimum Maven required version is ${maven-required-version}</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java-version}</version>
                                    <message>Minimum JDK required version is ${java-version}</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!--force the source plugin to be executed on build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.openrewrite.maven</groupId>
                <artifactId>rewrite-maven-plugin</artifactId>
                <version>${rewrite-plugin-version}</version>
                <configuration>
                    <activeRecipes>
                        <!--recipe>org.openrewrite.java.migrate.jakarta.JakartaEE10</recipe-->
                        <!--recipe>org.openrewrite.java.migrate.UpgradeToJava17</recipe-->
                        <!--recipe>org.openrewrite.java.migrate.UpgradeToJava21</recipe-->
                    </activeRecipes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.openrewrite.recipe</groupId>
                        <artifactId>rewrite-migrate-java</artifactId>
                        <version>${rewrite-java-version}</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

</project>
